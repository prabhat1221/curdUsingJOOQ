/*
 * This file is generated by jOOQ.
 */
package com.jooq.crud.model.tables.records;


import com.jooq.crud.model.tables.ProductTbl;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProductTblRecord extends UpdatableRecordImpl<ProductTblRecord> implements Record4<Integer, String, Double, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>mydb.product_tbl.id</code>.
     */
    public ProductTblRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>mydb.product_tbl.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>mydb.product_tbl.name</code>.
     */
    public ProductTblRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>mydb.product_tbl.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>mydb.product_tbl.price</code>.
     */
    public ProductTblRecord setPrice(Double value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>mydb.product_tbl.price</code>.
     */
    public Double getPrice() {
        return (Double) get(2);
    }

    /**
     * Setter for <code>mydb.product_tbl.quantity</code>.
     */
    public ProductTblRecord setQuantity(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>mydb.product_tbl.quantity</code>.
     */
    public Integer getQuantity() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, Double, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, String, Double, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return ProductTbl.PRODUCT_TBL.ID;
    }

    @Override
    public Field<String> field2() {
        return ProductTbl.PRODUCT_TBL.NAME;
    }

    @Override
    public Field<Double> field3() {
        return ProductTbl.PRODUCT_TBL.PRICE;
    }

    @Override
    public Field<Integer> field4() {
        return ProductTbl.PRODUCT_TBL.QUANTITY;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public Double component3() {
        return getPrice();
    }

    @Override
    public Integer component4() {
        return getQuantity();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public Double value3() {
        return getPrice();
    }

    @Override
    public Integer value4() {
        return getQuantity();
    }

    @Override
    public ProductTblRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public ProductTblRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public ProductTblRecord value3(Double value) {
        setPrice(value);
        return this;
    }

    @Override
    public ProductTblRecord value4(Integer value) {
        setQuantity(value);
        return this;
    }

    @Override
    public ProductTblRecord values(Integer value1, String value2, Double value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProductTblRecord
     */
    public ProductTblRecord() {
        super(ProductTbl.PRODUCT_TBL);
    }

    /**
     * Create a detached, initialised ProductTblRecord
     */
    public ProductTblRecord(Integer id, String name, Double price, Integer quantity) {
        super(ProductTbl.PRODUCT_TBL);

        setId(id);
        setName(name);
        setPrice(price);
        setQuantity(quantity);
    }
}
